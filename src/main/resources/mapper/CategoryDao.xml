<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.shoppingmanager.dao.CategoryDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.shoppingmanager.entity.Category" id="categoryMap">
        <result property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name"/>
        <result property="categoryType" column="category_type"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
    </resultMap>


	<select id="queryObject" resultMap="categoryMap">
		select  category_id,category_name,category_type from product_category where category_id = #{categoryId}
	</select>

	<select id="querycategoryList" resultMap="categoryMap">
		select * from product_category
	</select>


	<select id="queryList" resultMap="categoryMap">
		select * from product_category
		<where>
			<if test="categoryName != null and categoryName.trim() != ''">
				and category_name = #{categoryName}
			</if>
			<if test="categoryType != null and categoryType.trim() != ''">
				and category_type = #{categoryType}
			</if>
		</where>

        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by category_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from product_category
	</select>

	<insert id="save" parameterType="com.example.shoppingmanager.entity.Category" useGeneratedKeys="true" keyProperty="id">
		insert into product_category
		(
		`category_name`,
		`category_type`,
		`create_time`
		)
		values
		(
		#{categoryName},
		#{categoryType},
		#{createTime}
		)
	</insert>


    <update id="update" parameterType="com.example.shoppingmanager.entity.Category">
        update product_category
        <set>
			<if test="categoryName != null">
				`category_name` = #{categoryName},
			</if>
			<if test="categoryType != null">
				`category_type` = #{categoryType},
			</if>
			<if test="updateTime != null">
				`update_time` = #{updateTime}
			</if>
		</set>
        where category_id = #{categoryId}
    </update>


	<delete id="deleteBatch">
		DELETE  from product_category  WHERE  category_id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


</mapper>